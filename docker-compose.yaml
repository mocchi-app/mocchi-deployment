version: '3'

services:
  postgres-brand:
    image: postgres:12.3
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_BRAND_USER}
      POSTGRES_PASSWORD: ${POSTGRES_BRAND_PASSWORD}
      POSTGRES_DB: ${POSTGRES_BRAND_DB}
    volumes:
      - /root/brand/data:/var/lib/postgresql/data

  zoo:
    image: zookeeper:3.4.9
    hostname: zoo
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo:2888:3888
    volumes:
      - ./zk-single-kafka-single/zoo/data:/data
      - ./zk-single-kafka-single/zoo/datalog:/datalog

  kafka:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./zk-single-kafka-single/kafka/data:/var/lib/kafka/data
    depends_on:
      - zoo

  brand-be:
    image: docker.pkg.github.com/mocchi-app/brand-be/brand-be:latest
    restart: always
    ports:
      - "8080:8080"
    environment:
      API_KEY: ${API_KEY}
      API_SECRET_KEY: ${API_SECRET_KEY}
      STRIPE_API_KEY: ${STRIPE_API_KEY}
      DATABASE_URL: postgresql://postgres-brand:5432/${POSTGRES_BRAND_DB}
      JDBC_DATABASE_USERNAME: ${POSTGRES_BRAND_USER}
      JDBC_DATABASE_PASSWORD: ${POSTGRES_BRAND_PASSWORD}
      SERVER_REDIRECT_URL: ${SERVER_REDIRECT_URL}
      FRONT_REDIRECT_URL: ${FRONTEND_REDIRECT_URL}

  postgres-affiliate:
    image: postgres:12.3
    restart: always
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_AFFILIATE_USER}
      POSTGRES_PASSWORD: ${POSTGRES_AFFILIATE_PASSWORD}
      POSTGRES_DB: ${POSTGRES_AFFILIATE_DB}
    volumes:
      - /root/affiliate/data:/var/lib/postgresql/data
  affiliate-be:
    image: docker.pkg.github.com/mocchi-app/affiliate-be/affiliate-be:latest
    restart: always
    ports:
      - "8090:8080"
    environment:
      AUTH_DOMAIN: ${AUTH_DOMAIN}
      AUTH_CLIENT_ID: ${AUTH_CLIENT_ID}
      AUTH_CLIENT_SECRET: ${AUTH_CLIENT_SECRET}
      DATABASE_URL: postgresql://postgres-affiliate:5432/${POSTGRES_AFFILIATE_DB}
      JDBC_DATABASE_USERNAME: ${POSTGRES_AFFILIATE_USER}
      JDBC_DATABASE_PASSWORD: ${POSTGRES_AFFILIATE_PASSWORD}
      STRIPE_API_KEY: ${STRIPE_API_KEY}
      STRIPE_API_CLIENT_ID: ${STRIPE_API_CLIENT_ID}

  brand-fe:
    image: docker.pkg.github.com/mocchi-app/brand-fe/brand-fe:latest
    ports:
      - 7070:3000

  affiliate-fe:
    image: docker.pkg.github.com/mocchi-app/affiliate-fe/affiliate-fe:latest
    ports:
      - 7071:3000

  articles-strapi-giftjet:
    image: docker.pkg.github.com/mocchi-app/articles-strapi-giftjet/articles-strapi-giftjet:latest
    ports:
      - 6060:1337

  articles-frontend-giftjet:
    image: docker.pkg.github.com/mocchi-app/articles-frontend-giftjet/articles-frontend-giftjet:latest
    ports:
      - 6061:3000

  postgres-articles-strapi-giftjet:
    image: postgres:12.3
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_GIFTJET_USER}
      POSTGRES_PASSWORD: ${POSTGRES_GIFTJET_PASSWORD}
      POSTGRES_DB: ${POSTGRES_GIFTJET_DB}
    volumes:
      - /root/giftjet/data:/var/lib/postgresql/data
